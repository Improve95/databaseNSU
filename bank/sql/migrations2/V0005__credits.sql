create type credit_status as enum ('open', 'close');
create table credits (
    id bigint primary key generated by default as identity ,
    initial_debt numeric(15, 2) not null check ( initial_debt >= 0 ) ,
    taking_date date not null default current_date,
    percent int not null check ( percent > 0 ),
    credit_period interval not null ,
    month_amount numeric(15, 2) not null check ( month_amount > 0 ) ,
    client_id int not null ,
    credit_tariff_id int not null ,
    credit_status credit_status not null default 'open'::credit_status ,
    foreign key (client_id, credit_tariff_id) references credit_tariff_client (client_id, credit_tariff_id) on delete set null
);

create table balances (
    id uuid primary key default gen_random_uuid() ,
    credit_id bigint not null references credits("id") ,
    remaining_debt numeric(15, 2) not null check ( remaining_debt > 0 ) ,
    accrued_by_percent numeric(15, 2) not null check ( accrued_by_percent > 0 ) ,
    penalties_amount numeric(15, 2) not null check ( accrued_by_percent > 0 ) ,
    date date not null default current_date
);
