CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

drop table if exists person cascade;
create table person (
    id int primary key generated by default as identity ,
    name varchar(50) not null ,
    second_name varchar(50) not null ,
    phone varchar(11) unique not null
);
truncate table person cascade;

drop table if exists passport cascade;
create table passport (
    person_id int primary key references person("id") on delete cascade ,
    series int not null ,
    number int not null
);
drop table if exists passport cascade;

drop table if exists polis cascade;
create table polis (
    person_id int primary key references person("id") on delete cascade ,
    number int unique not null
);
drop table if exists polis cascade;

drop table if exists department cascade;
create table department (
    id int primary key generated by default as identity ,
    name varchar(50) not null ,
    capacity int not null
);
drop table if exists department cascade;

create or replace function check_doctor_limit()
    returns trigger as $$
declare
    doctor_count int;
    department_capacity int;
begin
    select count(*) into doctor_count from doctor where department_id = NEW.department_id;
    select capacity into department_capacity from department where id = NEW.department_id;

    if doctor_count >= department_capacity then
        raise exception 'exceeded department capacity limit';
    end if;

    return NEW;
end
$$ ;

drop table if exists doctor;
create table doctor (
    id int primary key references person("id") ,
    department_id int not null references department("id") on delete cascade
);
truncate table doctor cascade;

create trigger doctor_limit_trigger before insert on doctor
    for each ROW execute function check_doctor_limit();

drop table if exists patient;
create table patient (
  id int primary key references person("id"),
  coming_time timestamp not null ,
  release_time time ,
  status int not null
);
truncate table patient cascade;