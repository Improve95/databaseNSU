drop table if exists patient cascade ;
create table patient (
    id uuid primary key references person("id") on delete cascade ,
    coming_time timestamp not null ,
    release_time time ,
    doctor_id uuid references doctor("id") on delete cascade ,
    status int
);
truncate table patient cascade;

drop table if exists disease cascade ;
create table disease (
    id uuid primary key default gen_random_uuid() ,
    patient_id uuid references patient("id") on delete cascade ,
    name varchar(100) ,
    installation_time timestamp not null ,
    doctor_id uuid references doctor("id") ,
    is_relevant bool not null
);
create index disease_index on disease using btree (patient_id);
truncate table disease cascade;

drop table if exists patient_change cascade;
create table patient_change (
    id int primary key generated by default as identity ,
    patient_id uuid references patient("id") on delete cascade ,
    change_time timestamp not null
);
create index patient_change_index on patient_change using btree (change_time);
truncate table patient_change cascade;

drop table if exists patient_change_doctor cascade;
create table patient_change_doctor (
    id int primary key generated by default as identity ,
    was uuid references doctor("id") on delete cascade ,
    became uuid references doctor("id") on delete cascade ,
    patient_change_id int references patient_change("id")
);
truncate table patient_change_doctor cascade;

drop table if exists patient_change_department cascade;
create table patient_change_department (
    id int primary key generated by default as identity ,
    was uuid references department("id") on delete cascade ,
    became uuid references department("id") on delete cascade ,
    patient_change_id int references patient_change("id")
);
truncate table patient_change_department cascade;