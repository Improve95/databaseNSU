create type patient_status_type as enum ('SICK', 'HEALTHY', 'OUT_TREATMENT', 'ANOTHER_PLACE');
create table patient (
    id int generated by default as identity primary key ,
    passport_series varchar(4) check ( passport_number like '\d{4}' ),
    passport_number varchar(6) check ( passport_number like '\d{6}' ),
    polis_number varchar(16) unique check ( polis_number like '\d{16}' ),

    name varchar(50) not null ,
    second_name varchar(50) not null ,
    phone varchar(11) unique check ( phone like '\d{11}' ) ,

    patient_status patient_status_type default 'SICK'::patient_status_type,
    doctor_id int references doctor("id") on delete set null ,
    disease int references disease("id") on delete set null
);

-- create or replace function check_patient_not_doctor()
--     returns trigger as $$
-- declare
--     patient_passport_number varchar;
--     patient_passport_series varchar;
--     doctor_passport_number varchar;
--     doctor_passport_series varchar;
-- begin
--     select
-- end;
--     $$ language plpgsql;

create type patient_change_type as enum ('STATUS', 'DEPARTMENT', 'DOCTOR');
create table patient_history (
    id uuid primary key default gen_random_uuid() ,
    change_type patient_change_type not null ,
    before int ,
    after int not null ,
    change_time timestamp with time zone default current_timestamp not null,
    patient_id int references patient("id") on delete cascade
);
