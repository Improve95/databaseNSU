drop type if exists patient_status_type cascade ;
create type patient_status_type as enum ('HEALTHY', 'OUT_TREATMENT', 'TREATMENT_IN_ANOTHER_PLACE');

drop table if exists patient cascade ;
create table patient (
    id int primary key generated by default as identity ,
    coming_time timestamp not null ,
    release_time date ,
    doctor_id int references doctor("staff_id") on delete set null ,
    status patient_status_type not null ,
    person_id int references person("id") ,
    constraint patient_not_equals_doctor check ( patient.person_id != patient.doctor_id )
);
truncate table patient cascade;

-- alter table patient
--     add constraint patient_not_equals_doctor check ( id != patient.doctor_id );

drop table if exists polis cascade ;
create table polis (
    patient_id int primary key references person("id") ,
    number int8 unique not null check ( number > 0 and number < 9999999999999999 )
);
truncate table polis cascade ;

drop table if exists disease cascade ;
create table disease (
    id int primary key generated by default as identity ,
    patient_id int references patient("id") on delete cascade ,
    name varchar(100) ,
    installation_time timestamp not null ,
    doctor_id int references doctor("staff_id") ,
    is_relevant bool not null
);
create index disease_index on disease using btree (patient_id);
truncate table disease cascade;

drop table if exists patient_change cascade;
create table patient_change (
    id int primary key generated by default as identity ,
    patient_id int references patient("id") on delete cascade ,
    change_field staff_changes not null ,
    before varchar(50) not null,
    after varchar(50) not null ,
    change_time timestamp not null
);
create index patient_change_index on patient_change using btree (patient_id);
truncate table patient_change cascade;
--
-- drop table if exists patient_change_doctor cascade;
-- create table patient_change_doctor (
--     id int primary key generated by default as identity ,
--     was int references doctor("id") on delete cascade ,
--     became int references doctor("id") on delete cascade ,
--     patient_change_id int references patient_change("id")
-- );
-- truncate table patient_change_doctor cascade;
--
-- drop table if exists patient_change_department cascade;
-- create table patient_change_department (
--     id int primary key generated by default as identity ,
--     was int references department("id") on delete cascade ,
--     became int references department("id") on delete cascade ,
--     patient_change_id int references patient_change("id")
-- );
-- truncate table patient_change_department cascade;